diff -r e20b20aff28a configure.ag
--- a/configure.ag	Fri Apr 01 15:40:54 2016 +0200
+++ b/configure.ag	Tue Apr 05 10:28:37 2016 +0200
@@ -170,6 +170,13 @@
 	have_lidar=$enableval,
 	have_lidar=$dft_lidar)
 
+dft_gadget=auto
+AC_ARG_ENABLE(gadget,
+	AS_HELP_STRING([--enable-gadget],
+		[enable support for GADGET data (default=auto)]),
+	enable_gadget=$enableval,
+	enable_gadget=$dft_gadget)
+
 dft_sql=yes
 AC_ARG_ENABLE(sql,
 	AS_HELP_STRING([--enable-sql],
@@ -2601,6 +2608,12 @@
 fi
 AM_CONDITIONAL(HAVE_NETCDF, test x"$have_netcdf" != xno)
 
+# gadget
+org_have_gadget=yes
+have_gadget=$org_have_gadget
+AM_CONDITIONAL(HAVE_GADGET, test "x$enable_gadget" = xyes)
+
+
 # liblas, only used in lidar module
 org_have_liblas=auto
 have_liblas=$org_have_liblas
@@ -3604,6 +3617,7 @@
 	'libxml2      ' \
 	'lidar        ' \
 	'netcdf       ' \
+	'gadget       ' \
 	'openssl      ' \
 	'pcre         ' \
 	'perl         ' \
diff -r e20b20aff28a monetdb5/optimizer/Makefile.ag
--- a/monetdb5/optimizer/Makefile.ag	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/Makefile.ag	Tue Apr 05 10:28:37 2016 +0200
@@ -28,6 +28,7 @@
 		opt_deadcode.c opt_deadcode.h \
 		opt_evaluate.c opt_evaluate.h \
 		opt_factorize.c opt_factorize.h \
+		opt_gadget.c opt_gadget.h \
 		opt_garbageCollector.c opt_garbageCollector.h \
 		opt_generator.c opt_generator.h \
 		opt_querylog.c opt_querylog.h \
diff -r e20b20aff28a monetdb5/optimizer/opt_pipes.c
--- a/monetdb5/optimizer/opt_pipes.c	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/opt_pipes.c	Tue Apr 05 10:28:37 2016 +0200
@@ -223,6 +223,40 @@
 	 "optimizer.garbageCollector();",
 	 "stable", NULL, NULL, 1},
  */
+/* The gadget pipe line is (and should be kept!) identical to the
+ * default pipeline, except that optimizer gadget is added.
+ *
+ * NOTE:
+ * If you change the gadget pipe, please also update the man page
+ * (see tools/mserver/mserver5.1) accordingly!
+ */
+	{"gadget_pipe",
+	 "optimizer.inline();"
+	 "optimizer.candidates();"
+	 "optimizer.remap();"
+	 "optimizer.costModel();"
+	 "optimizer.coercions();"
+	 "optimizer.evaluate();"
+	 "optimizer.aliases();"
+	 "optimizer.pushselect();"
+	 "optimizer.mitosis();"
+	 "optimizer.mergetable();"
+	 "optimizer.deadcode();"
+	 "optimizer.aliases();"
+	 "optimizer.constants();"
+	 "optimizer.commonTerms();"
+	 "optimizer.reorder();"
+	 "optimizer.deadcode();"
+	 "optimizer.reduce();"
+	 "optimizer.matpack();"
+	 "optimizer.dataflow();"
+	 "optimizer.querylog();"
+	 "optimizer.multiplex();"
+	 "optimizer.generator();"
+	 "optimizer.profiler();"
+	 "optimizer.gadget();"
+	 "optimizer.garbageCollector();",
+	 "stable", NULL, NULL, 1},
 /* sentinel */
 	{NULL, NULL, NULL, NULL, NULL, 0}
 };
diff -r e20b20aff28a monetdb5/optimizer/opt_prelude.c
--- a/monetdb5/optimizer/opt_prelude.c	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/opt_prelude.c	Tue Apr 05 10:28:37 2016 +0200
@@ -227,6 +227,9 @@
 str userRef;
 str vectorRef;
 str zero_or_oneRef;
+str gadgetRef;
+str checktableRef;
+str analyzetableRef;
 
 void optimizerInit(void)
 {
@@ -442,6 +445,9 @@
 	vectorRef = putName("vector",6);
 	zero_or_oneRef = putName("zero_or_one",11);
 	userRef = putName("user",4);
+	gadgetRef = putName("gadget",6);
+	checktableRef = putName("checktable",10);
+	analyzetableRef = putName("analyzetable",12);
 
 	/*
 	 * Set the optimizer debugging flag
diff -r e20b20aff28a monetdb5/optimizer/opt_prelude.h
--- a/monetdb5/optimizer/opt_prelude.h	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/opt_prelude.h	Tue Apr 05 10:28:37 2016 +0200
@@ -227,4 +227,7 @@
 opt_export  str userRef;
 opt_export  str vectorRef;
 opt_export  str zero_or_oneRef;
+opt_export  str gadgetRef;
+opt_export  str checktableRef;
+opt_export  str analyzetableRef;
 #endif
diff -r e20b20aff28a monetdb5/optimizer/opt_reorder.c
--- a/monetdb5/optimizer/opt_reorder.c	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/opt_reorder.c	Tue Apr 05 10:28:37 2016 +0200
@@ -225,11 +225,11 @@
 	
 	pushInstruction(mb,old[0]);
 	old[0]=0;
-	for( i=1; i<limit; i++)
-		if ( getModuleId(old[i]) == datacyclotronRef && getFunctionId(old[i]) == bindRef){
-			pushInstruction(mb,old[i]);
-			old[i] = 0;
-		}
+    for( i=1; i<limit; i++)
+        if ( getModuleId(old[i]) == datacyclotronRef && getFunctionId(old[i]) == bindRef){
+            pushInstruction(mb,old[i]);
+            old[i] = 0;
+        }
 
 	start=1;
 	for (i=1; i<limit; i++){
diff -r e20b20aff28a monetdb5/optimizer/opt_support.c
--- a/monetdb5/optimizer/opt_support.c	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/opt_support.c	Tue Apr 05 10:28:37 2016 +0200
@@ -140,6 +140,7 @@
 {"deadcode",	0,	0,	0,	DEBUG_OPT_DEADCODE},
 {"evaluate",	0,	0,	0,	DEBUG_OPT_EVALUATE},
 {"factorize",	0,	0,	0,	DEBUG_OPT_FACTORIZE},
+{"gadget",		0,	0,	0,	DEBUG_OPT_GADGET},
 {"garbage",		0,	0,	0,	DEBUG_OPT_GARBAGE},
 {"generator",	0,	0,	0,	DEBUG_OPT_GENERATOR},
 {"history",		0,	0,	0,	DEBUG_OPT_HISTORY},
diff -r e20b20aff28a monetdb5/optimizer/opt_support.h
--- a/monetdb5/optimizer/opt_support.h	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/opt_support.h	Tue Apr 05 10:28:37 2016 +0200
@@ -74,6 +74,7 @@
 #define DEBUG_OPT_JSON				54
 #define DEBUG_OPT_GEOSPATIAL			55
 #define DEBUG_OPT_VOLCANO			10
+#define DEBUG_OPT_GADGET            56
 
 #define DEBUG_OPT(X) ((lng) 1 << (X))
 opt_export lng optDebug;
diff -r e20b20aff28a monetdb5/optimizer/opt_wrapper.c
--- a/monetdb5/optimizer/opt_wrapper.c	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/opt_wrapper.c	Tue Apr 05 10:28:37 2016 +0200
@@ -36,6 +36,7 @@
 #include "opt_deadcode.h"
 #include "opt_evaluate.h"
 #include "opt_factorize.h"
+#include "opt_gadget.h"
 #include "opt_garbageCollector.h"
 #include "opt_generator.h"
 #include "opt_inline.h"
@@ -72,6 +73,7 @@
 	{"dumpQEP", &OPTdumpQEPImplementation},
 	{"evaluate", &OPTevaluateImplementation},
 	{"factorize", &OPTfactorizeImplementation},
+	{"gadget", &OPTgadgetImplementation},
 	{"garbageCollector", &OPTgarbageCollectorImplementation},
 	{"generator", &OPTgeneratorImplementation},
 	{"inline", &OPTinlineImplementation},
diff -r e20b20aff28a monetdb5/optimizer/optimizer.mal
--- a/monetdb5/optimizer/optimizer.mal	Fri Apr 01 15:40:54 2016 +0200
+++ b/monetdb5/optimizer/optimizer.mal	Tue Apr 05 10:28:37 2016 +0200
@@ -114,6 +114,14 @@
 address OPTwrapper
 comment "Turn function into a factory";
 
+#opt_gadget.mal
+
+pattern optimizer.gadget():str
+address OPTwrapper;
+pattern optimizer.gadget(mod:str, fcn:str):str
+address OPTwrapper
+comment "Lazy load of gadget files";
+
 #opt_garbagecollector.mal
 
 pattern optimizer.garbageCollector():str
diff -r e20b20aff28a sql/backends/monet5/vaults/Makefile.ag
--- a/sql/backends/monet5/vaults/Makefile.ag	Fri Apr 01 15:40:54 2016 +0200
+++ b/sql/backends/monet5/vaults/Makefile.ag	Tue Apr 05 10:28:37 2016 +0200
@@ -4,7 +4,7 @@
 #
 # Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.
 
-SUBDIRS = HAVE_SAMTOOLS?bam HAVE_FITS?fits HAVE_LIDAR?lidar HAVE_NETCDF?netcdf HAVE_SHP?shp
+SUBDIRS = HAVE_SAMTOOLS?bam HAVE_FITS?fits HAVE_LIDAR?lidar HAVE_NETCDF?netcdf HAVE_SHP?shp HAVE_GADGET?gadget
 
 INCLUDES = ../../../include \
 	   ../../../common \
